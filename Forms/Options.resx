<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OptionsMenuImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="OptionsMenuImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABi
        DAAAAk1TRnQBSQFMAgEBAgEAARQBAAEUAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAwoBDQMoAT0BQgI/AXQBSwJEAY4BSwJEAY8BSAJCAYYBNwI2AVoDGQEj
        AwEBAhwAAw4BEwMfAS0DEQEXATgCNwFeAUwCRAGPATUCNAFWAwABAQMWAR8DEwEaAwABAZMAAQEDIQEw
        AWwCJgHkAZ8BAgEEAf8B5wG1AaAB/wGlAR0BEwH/AZ8BAgEEAf8BnwECAQQB/wGfAQIBBAH/AVYCPgG+
        AToCOQFiAwgBCxQAAw0BEQFpAV4BawHqAasBxgHMAfsBVQI/AbwBnQHpAv8BpQHrAv8BUAJEAZsDMgFQ
        AVUBagGZAfQBUgJEAaYDFAEcjwABAQMsAUQBnwECAQQB/wGfAQIBBAH/AZ8BAgEEAf8BnwECAQQC/wHV
        AYYC/wHkAbEB/wGrASIBJAH/AZ8BAgEEAf8BnwECAQQB/wF+ARMBFQHzAUQCQAF5AwoBDRAAAVgBQwFF
        AbkBjgHbAv8BmgHmAv8BNwE4AWwB9wEqAVsBqwH/ASgBXwG5Af8BAgEiAYEB/wFHAZkC/wGbAeYC/wHb
        AfcC/wMpAT4DIAEuAwsBD4QAAx8BLQGfAQIBBAH/AZ8BAgEEAf8BnwECAQQB/wGfAQIBBAH/AbEBMgEz
        Av8B6QG+Av8B5QGzAv8B2wGWAf8BnwENAQMB/wGfAQIBBAH/AZ8BAgEEAf8BfgETARUB8wE7AjoBZAMB
        AQIMAAFKAkMBjAFSAYUB6wH/Ac4B3AH3Af8BHgFYAb4B/wH1AfsC/wH3AfwC/wE0AWABvgH/AXYBpgL/
        ARMBbQL/AWwBTgFRAeQBtwG6Ab0B+QGpAaQBqQH3AUICPwF0gwABAQGfAQIBBAH/AaABAwEFAf8BogEJ
        AQgB/wGkAQsBCgH/AaIBCQEIAv8B9QHhAv8B9gHmAv8B8wHbAv8B6QG+Af8B+QHNAYYB/wGfAQIBBAH/
        AZ8BAgEEAf8BnwECAQQB/wFWAj4BvgMZASMDBwEJAy4BSAE4AjcBXQFJATUBVgHlAcIB1AHxAf8BzgHq
        Av8BJAFhAcUB/wHGAecC/wHPAesC/wFkAa0C/wHZAe8C/wG+AdsC/wGoAc0B9gH/AZEB3QL/AZ8B6gL/
        AUYCQQF/gAADIgEyAawBHQEUAf8BtAEvAR8B/wG5AToBJgH/AbsBPgEoAf8B5QGxAZ0C/wH7AfMC/wH+
        AfsC/wH6AfAC/wHwAdQC/wHgAaQB/wHnAacBYQH/AZ8BAgEEAf8BnwECAQQB/wGfAQIBBAH/ATcCNgFa
        AWEBRQFHAcoB0gHzAv8BtQHrAv8B7gH6Av8BLgFZAakB/wFRAXYBtwH/AaEBbwFKAf8BcgFzAY8B/wHF
        Ab8BowH/AaUBxQHMAf8BpwHZAv8BlAGAAXIB/wHuAfcC/wFSAYUB6wH/ATgBjAL/Ax0BKYAAAWMCOwHK
        AcEBSwEvAf8BygFfATwB/wHQAW0BQwH/AdIBcQFGAf8B4QGhAYgC/wH8AfcD/wH+Av8B+wH0Av8B8QHX
        Af8BnwEPAQMB/wGfAQIBBAH/AZ8BAgEEAf8BtwFCAUMC/wH9AfsB/wFIAkIBhgGQAdwC/wFzAcAC/wHN
        AeoC/wGaAc8C/wGdAbABrwH/Ab8BVgECAf8BvwFWAQIC/wHnAbkC/wHYAYwC/wHXAYsB/wHnAaoBaQH/
        AWUBXQGBAf8BtgHfAv8BTgF5AdAB/wFJAkIBhwMAAQGAAAHHAVgBNwH/AdUBdwFKAf8B4AGOAVgB/wHn
        AZ4BYQH/AesBqQFtAf8B8wHZAcEB/wHjAZ4BbQH/AeQBsQGWAf8BzwF6AVwB/wG3ATYBIwH/AaYBEAEN
        Af8BnwECAQQB/wGfAQIBBAH/AcMCYQL/AfsB9AH/AUsCRAGPAyIBMgETAVwB3AH/AQUBXAH3Af8BNQGB
        AfEB/wHNAXEBHQH/AdABeAEkAf8B3AGZAVwC/wHhAagC/wHhAaYC/wHgAaUC/wHgAaMB/wHJAXcBRQH/
        AY8BSQEiAf8BvwFWAQIB/wFOAkMBlgMHAQqAAAHYAX0BTQH/AegBnwFiAf8B9QG8AXMC/wH6AfIB/wHt
        AcUBnQH/Af0BzwGBAf8B+AHgAcIB/wHyAckBmAH/AdgBgQFOAf8BxgFXATcB/wGzAS0BHgH/AaABBAEG
        Af8BnwECAQQB/wG3AUIBQwL/AfcB6QH/AUsCRAGOBAABOgI5AWIBTAFLAYEB/wHXAYQBMgH/AeABlQFD
        Af8B5AGeAUwB/wHxAcsBnwL/AekBvgL/AekBvQH/AfkB3AGwAf8BuwFUAQ4B/wG/AVYBAgH/Ab8BVgEC
        Av8B5gG2Af8BXwE9AToBzgMSARiAAAGtAWgBSAHxAfgBxQF4Av8B6gHDA/8B/gL/AekBvgL/AfkB7QH/
        AecBtgGLAf8B+QHGAXkB/wHnAZ4BYQH/AdMBcwFHAf8BvgFFASwB/wGpARYBEAH/AZ8BAgEEAf8BtwFC
        AUMC/wHyAdkB/wFCAj8BdAgAAWQBQQE/AcgB6AGlAVMB/wHyAboBaAH/AfsB4gG4Av8B6wHHAf8B9QHN
        AZEB/wHaAZQBXAH/AdkBiAE2Af8BygFrARcB/wG/AVYBAgH/Ab8BVgECAv8B7QHKAf8BaQE9ATkB2QMS
        ARmAAAFCAj8BdAH/AdoBkwL/Af4B+wP/Af4C/wH9AfkC/wH5AewB/wHtAcsBsAL/AdsBlQH/AfIBtwFv
        Af8B3AGGAVMB/wHGAVcBNgH/Aa8BJQEZAf8BnwECAQQC/wHuAc8B/wGfAQ8BAwH/AygBPQgAAWMBQgE/
        AcYB9wHDAXEC/wHtAcsB/wHhAbEBkwL/AewByQH/Ae0BxAGcAf8B9gHBAW8B/wHmAaEBTwH/AdQBgQEs
        Af8BwgFcAQgB/wG/AVYBAgL/AfMB3AH/AWQBPQE7Ac8DDAEQhAAB/wHhAagC/wH7AfQC/wH8AfcC/wH6
        AfEC/wH2AeUC/wHvAdAB/wHbAZwBbgH/AfkBxQF4Af8B4gGSAVoB/wHLAWEBPAH/AbMBLgEeAf8B2wGe
        AZsC/wHkAa8B/wFsAiYB5AMKAQ0IAAMzAVMB/wHXAY0C/wH6Ae8C/wH6Ae8C/wH5Ae4B/wHzAd0BzAL/
        AdYBiAH/Ae4BsgFgAf8B2wGMAToB/wHIAWcBEwH/AcsBdgEyAf8BtwFKAQIB/wFIAkIBhgMAAQGEAAFO
        AkQBkwH/AfgB6gL/AfcB5wL/AfUB4gL/AfEB1QL/AeoBwAL/AeABpAH/AeMBoAFeAf8B4wGUAVsB/wHK
        AWkBPAH/AcEBVwE0Af8BnwELAQQB/wG3AUIBKQH/AyEBMBAAAf8B3AGhAv8B/QH4Av8B/AH4Av8B/AH3
        Av8B/AH3Af8B7QHNAbUB/wHyAboBaAH/Ae0BwgGTAf8B8gHZAcIB/wH5Ae4B5QH/Ac8BbAEiAf8DHAEn
        jAABdQFVAU4B0gH/Ae8B0AL/Ae0BywL/AekBvgL/AeQBsQH/AecBsAF7Av8B0wGBAf8B3wGMAVYB/wHI
        AVsBOQH/AbEBKQEcAf8BnwECAQQB/wMsAUQDAAEBEAADKwFCAf8B9gHkAv8B/gH9Av8B/gH9Av8B+AHr
        Af8B8wHdAcsB/wHbAZABSgH/Ad0BkAE+Af8ByQFqARYB/wG/AVYBAgH/ATgCNwFdAwABAZAAAU4CRAGT
        Af8B4gGrAv8B3gGeAf8B8wHAAXkC/wHWAYgB/wHjAZsBXAH/AdcBfAFMAf8BwgFNATAB/wGrARwBFAH/
        Ax8BLQMAAQEYAAEzAjIBUgH/AfoB9wX/AfkB8QHvBf8B6gGpAVcB/wHYAYUBMwH/AcwBawEdAf8BNgI1
        AVgDAQECnAABQgI/AXQBugGLAVoB8QHwAbEBbAH/Ad4BiwFVAf8BZwE/AT4BygMiATIDAAEBKAABTgJE
        AZQB/gHHAZ0B/wH3Aa8BcgH/AfIBogFnAf8BSAJDAYMDBQEHkAABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEAAfABBwHwAQMEAAHAAQMB4AEDBAABgAEBAeAFAAGAAQAB4CcAAYAHAAHA
        BwABwAUAAYABAAHABQABgAEBAeABAQQAAcABAQHgAQEEAAHgAQMB8AEDBAAB+AEPAfwBDwQACw==
</value>
  </data>
</root>